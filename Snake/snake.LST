C51 COMPILER V9.00   SNAKE                                                                 06/20/2019 20:55:51 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE SNAKE
OBJECT MODULE PLACED IN snake.OBJ
COMPILER INVOKED BY: F:\Keil\C51\BIN\C51.EXE snake.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <reg51.h>
   2          #include <intrins.h>
   3          #include <stdlib.h>
   4          #define uint unsigned int
   5          #define uchar unsigned char
   6          #define MAX_LEN 20              //蛇身最大长度
   7          #define MAX 7                   //点阵显示最大值
   8          #define MIN 0                   //点阵显示最小值
   9          
  10          uchar x[MAX_LEN + 1];   //蛇身数组
  11          uchar y[MAX_LEN + 1];
  12          
  13          char xD = 1, yD = 0;    //爬行方向
  14          
  15          uchar code num[] = {    //数码管显示数字
  16              0x3F,       // 0
  17              0x06,       // 1
  18              0x5B,       // 2
  19              0x4F,       // 3
  20              0x66,       // 4
  21              0x6D,       // 5
  22              0x7D,       // 6
  23              0x07,       // 7
  24              0x7F,       // 8
  25              0x6F        // 9
  26          };
  27          
  28          uchar n;                                //当前蛇身长度
  29          uint score = 0;                 //当前得分
  30          uint speed = 70;                //当前爬行速度
  31          uint fail = 0;                  //Game Over标记
  32          uint count = 100;               //10ms中断次数
  33          uint shi_score = 0;             //得分-十位
  34          uint ge_score = 0;              //得分-个位
  35          
  36          sbit up = P1^1;                 //上            
  37          sbit left = P1^2;               //左
  38          sbit right = P1^3;              //右
  39          sbit down = P1^4;               //下
  40          
  41          sbit begin = P1^0;              //游戏开始/结束
  42          sbit mode = P1^5;               //难易模式
  43          
  44          sbit shi = P1^6;                //位选-十位
  45          sbit ge = P1^7;                 //位选-个位
  46          
  47          uint invincible = 0;    //无敌版：碰到墙壁后会从另一侧出现，只有碰到蛇身时，游戏结束
  48          
  49          /*************************************************
  50          Name: 随机数函数
  51          Description: 用于生成 0 - 7     内的随机数
  52          *************************************************/
  53          uint random()
  54          {
  55   1              return rand() % (MAX + 1 - MIN) + MIN;          
C51 COMPILER V9.00   SNAKE                                                                 06/20/2019 20:55:51 PAGE 2   

  56   1      }
  57          
  58          /*************************************************
  59          Name: 制造豆子函数
  60          Description: 用于在屏幕上随机生成豆子
  61          *************************************************/
  62          void makebean()
  63          {
  64   1              uint i;
  65   1              while(1)
  66   1              {
  67   2                      x[0] = random();
  68   2                      y[0] = random();
  69   2                      for(i = 1 ; i < n && !(x[0] == x[i] && y[0] == y[i]) ; i++)
  70   2                      {       
  71   3                      }
  72   2                      if(n == i)
  73   2                              break;  
  74   2              }       
  75   1      }
  76          
  77          /*************************************************
  78          Name: 初始化函数
  79          Description: 用于初始化贪吃蛇程序
  80          *************************************************/
  81          void init()
  82          {       
  83   1              uint i;
  84   1              TMOD = 0x01;    //模式1  
  85   1              TH0 = 0xD8;             //定时时间10ms
  86   1              TL0 = 0xF0;             
  87   1              ET0 = 1;                //开定时器0中断
  88   1              TR0 = 1;                //启动定时器0
  89   1              EA = 1;                 //开总中断
  90   1      
  91   1              P0=0x00;
  92   1              P1=0xff;
  93   1              P2=0x00;
  94   1      
  95   1              n = 1 + 3;              //初始化蛇身长度
  96   1              score = 0;              //初始化游戏得分
  97   1              
  98   1              //初始化蛇身位置
  99   1              for(i = 1 ; i < n ; i++)
 100   1                      x[i - 1] = 4 - i;
 101   1              for(i = 1 ; i < n ; i++)
 102   1                      y[i - 1] = 0;
 103   1      
 104   1              makebean();             //初始化豆子位置        
 105   1      }
 106          
 107          /*************************************************
 108          Name: 延时函数
 109          Description: 用于延时
 110          *************************************************/
 111          void delay(char n)
 112          {
 113   1              char i;
 114   1              while(n != 0)
 115   1              {
 116   2                      i = 0xff;
 117   2                      while (i != 0)
C51 COMPILER V9.00   SNAKE                                                                 06/20/2019 20:55:51 PAGE 3   

 118   2                      {
 119   3                              i--;
 120   3                      }
 121   2                      n--;    
 122   2              }
 123   1      }
 124          
 125          /*************************************************
 126          Name: 按键检测函数
 127          Description: 用于检测 上下左右、难易模式 按键
 128          *************************************************/
 129          void keyboard()
 130          {
 131   1              if(mode == 0)
 132   1              {
 133   2                      delay(120);             //延时消抖
 134   2                      if(mode == 0)   //调节难易模式
 135   2                      {
 136   3                              if(invincible == 1)
 137   3                              {
 138   4                                      invincible = 0;
 139   4                                      speed = 70;     
 140   4                              }
 141   3                              else if(speed == 10)
 142   3                              {
 143   4                                      invincible = 1;
 144   4                                      speed = 40;
 145   4                              }
 146   3                              else
 147   3                              {
 148   4                                      speed = speed - 30;     
 149   4                              }       
 150   3                      }
 151   2              }
 152   1              if(begin == 0 && left == 0 && yD != -1)         //在游戏状态下，且非右行情况，点击左行按键
 153   1              {
 154   2                      xD = 0;
 155   2                      yD = 1;
 156   2              }
 157   1              if(begin == 0 && right == 0 && yD != 1)         //在游戏状态下，且非左行情况，点击右行按键
 158   1              {
 159   2                      xD = 0;
 160   2                      yD = -1;
 161   2              }
 162   1              if(begin == 0 && up == 0 && xD != 1)            //在游戏状态下，且非下行情况，点击上行按键
 163   1              {
 164   2                      yD = 0;
 165   2                      xD = -1;
 166   2              }
 167   1              if(begin == 0 && down == 0 && xD != -1) //在游戏状态下，且非上行情况，点击下行按键
 168   1              {
 169   2                      yD = 0;
 170   2                      xD = 1;
 171   2              }
 172   1      }
 173          
 174          /*************************************************
 175          Name: 检测 Game Over 函数
 176          Description: 用于检测游戏是否结束
 177          *************************************************/
 178          void accident()
 179          {
C51 COMPILER V9.00   SNAKE                                                                 06/20/2019 20:55:51 PAGE 4   

 180   1              uint i;
 181   1              if(invincible == 0)
 182   1              {
 183   2                      //非无敌版状态下碰到墙壁，游戏失败
 184   2                      if(x[1] > 7 || y[1] > 7)
 185   2                              fail = 1;
 186   2              }
 187   1              else
 188   1              {
 189   2                      //无敌版状态下碰到墙壁后，从另一侧出现
 190   2                      x[1] = x[1] % 8;
 191   2                      y[1] = y[1] % 8;        
 192   2              }
 193   1                      
 194   1              for(i = 2 ; i < n ; i++)
 195   1              {
 196   2                      //任意状态下碰到蛇身，游戏失败
 197   2                      if((x[1] == x[i]) & (y[1] == y[i]))
 198   2                              fail = 1;
 199   2              }
 200   1      }
 201          
 202          /*************************************************
 203          Name: 检测贪吃蛇是否吃到豆子函数
 204          Description: 用于检测贪吃蛇是否可以吃到豆子
 205          *************************************************/
 206          uint eat()
 207          {
 208   1              uint i, flag = 0;
 209   1              if((x[0] == x[1] + xD) & (y[0] == y[1] + yD))           //贪吃蛇是否吃到东西
 210   1              {
 211   2                      flag = 1;
 212   2                      score++;
 213   2                      
 214   2                      //蛇身+1
 215   2                      n++;
 216   2                      for(i = n - 1 ; i > 0 ; i--)
 217   2                      {
 218   3                              x[i] = x[i - 1];
 219   3                              y[i] = y[i - 1];
 220   3                      }
 221   2                      
 222   2                      makebean();
 223   2                      
 224   2                      if(n == MAX_LEN + 1)            //由于点阵是8×8，故设置蛇身长度达到20时，游戏重新开始
 225   2                      {
 226   3                              init();
 227   3                      }
 228   2              }
 229   1              return flag;    
 230   1      }
 231          
 232          /*************************************************
 233          Name: 幂函数
 234          Description: 用于计算 2 的幂
 235          *************************************************/
 236          uchar mux(uchar n) 
 237          {
 238   1              return 1 << n;
 239   1      }
 240          
 241          /*************************************************
C51 COMPILER V9.00   SNAKE                                                                 06/20/2019 20:55:51 PAGE 5   

 242          Name: 显示函数
 243          Description: 用于显示蛇身位置、豆子位置、游戏得分
 244          *************************************************/
 245          void display()
 246          {
 247   1              uint i;
 248   1      
 249   1              //点阵显示蛇身位置、豆子位置
 250   1              for(i = 0 ; i < n ; i++)
 251   1              {
 252   2                      P2 = mux(x[i]);
 253   2                      P0 = 0xff - mux(y[i]);
 254   2                      keyboard();
 255   2                      delay(1);
 256   2                      P2 = 0x00;
 257   2                      P0 = 0xff;
 258   2                      P3 = 0x00;
 259   2              }
 260   1      
 261   1              shi_score = score / 10;
 262   1              ge_score = score % 10;
 263   1      
 264   1              //数码管显示游戏得分
 265   1              shi = 0;
 266   1              ge = 1;
 267   1              P3 = num[shi_score];
 268   1              delay(1);
 269   1      
 270   1              shi = 1;
 271   1              ge = 0;
 272   1              P3 = num[ge_score];
 273   1              delay(1);
 274   1      } 
 275          
 276          /*************************************************
 277          Name: 中断服务程序
 278          Description: 用于实现贪吃蛇前进一格
 279          *************************************************/
 280          void timer0() interrupt 1
 281          {
 282   1              uint i;
 283   1              TH0 = 0xD8;             //10ms
 284   1              TL0 = 0xF0; 
 285   1              count--;
 286   1              
 287   1              if (count == 0)         //到达前进时间
 288   1              {
 289   2                      if(begin == 0)  //游戏开始
 290   2                      {
 291   3                              if(!eat())      //没有吃到豆子
 292   3                              {
 293   4                                      //朝运动方向前进一格
 294   4                                      for(i = n - 1 ; i > 1 ; i--)
 295   4                                      {
 296   5                                              x[i] = x[i - 1];
 297   5                                              y[i] = y[i - 1];
 298   5                                      }
 299   4                                      x[1] = x[2] + xD;
 300   4                                      y[1] = y[2] + yD;
 301   4      
 302   4                                      display();
 303   4                                      accident();
C51 COMPILER V9.00   SNAKE                                                                 06/20/2019 20:55:51 PAGE 6   

 304   4                              }       
 305   3                      }
 306   2                      count = speed;
 307   2              }
 308   1      }
 309          
 310          /*************************************************
 311          Name: 主函数
 312          Description: 用于完成贪吃蛇程序主要逻辑
 313          *************************************************/
 314          void main(void)
 315          {
 316   1              init();
 317   1      
 318   1              while(!fail)
 319   1              {
 320   2                      keyboard();
 321   2                      display();
 322   2              }
 323   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    862    ----
   CONSTANT SIZE    =     10    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     59       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
